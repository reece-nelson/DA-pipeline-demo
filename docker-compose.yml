services:
  postgresdb:
    image: postgres:18
    ports:
      - 5432:5432
    volumes:
      - ${PWD}/database/setup.sql:/docker-entrypoint-initdb.d/setup.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
        - .env
    networks:
        - postgres-network

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - 15433:80
    env_file:
        - .env
    depends_on:
      postgresdb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
        - postgres-network

  python-app:
    build: .
    container_name: python_runner
    volumes:
      - ./dbt:/app/dbt
      - ./reports:/app/reports
    depends_on:
      postgresdb:
        condition: service_healthy
      pgadmin:
        condition: service_healthy
    networks:
      - postgres-network

  fastapi:
    build:
      context: .
      dockerfile: Dockerfile  
    container_name: fastapi_app
    command: uvicorn api.main:app --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"
    depends_on:
      postgresdb:
        condition: service_healthy
    networks:
      - postgres-network

networks:
    postgres-network:
        driver: bridge